name: Docker release reusable workflow

on:
  workflow_call:
    inputs:
      SERVICE_NAME:
        description: 'The name of the service. Used as part of the Docker image tag.'
        required: true
        type: string
      BUILD_ARGS:
        description: 'Arguments to be passed to the Dockerfile during the build process.'
        required: true
        type: string
      DOCKER_FILE_PATH:
        description: 'Path to the Dockerfile for building the service image.'
        required: true
        type: string
      CARGO_FILE_PATH:
        description: 'Version to validate against the tag version. If specified, ensures the tag matches this version.'
        type: string
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true

jobs:
  release-docker:
    runs-on: ubuntu-latest
    environment: release
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Clone repo
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
          submodules: recursive

      - name: Set image tag if correctly formatted
        env:
          TAG: ${{ github.ref_name }}
        run: |
          TAG_VERSION=${TAG##${{ inputs.SERVICE_NAME }}/}
          if [ -n "${{ inputs.CARGO_FILE_PATH }}" ] ; then
            CARGO_VERSION=$(yq .package.version "${{ inputs.CARGO_FILE_PATH }}")
            if [ ! "$TAG_VERSION" = "$CARGO_VERSION" ] ; then
              echo "::error::$CARGO_VERSION does not match $TAG_VERSION."
              exit 1
            fi
          fi
          echo "FULL_IMAGE_TAG=concordium/${{ inputs.SERVICE_NAME }}:${TAG_VERSION}" >> $GITHUB_ENV

      - name: Check if image exist
        run: |
          set +e
          docker manifest inspect ${{ env.FULL_IMAGE_TAG }}
          EXITCODE=$?
          if [ $EXITCODE -eq "0" ]; then
            echo "Error: ${{ env.FULL_IMAGE_TAG }} already exist"
            exit 1
          fi

      - name: Build Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ inputs.DOCKER_FILE_PATH }}
          tags: ${{ env.FULL_IMAGE_TAG }}
          no-cache: true
          push: true
          build-args: |
            ${{ inputs.BUILD_ARGS }}
